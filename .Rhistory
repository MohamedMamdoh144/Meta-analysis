shiny::runApp()
runApp()
runApp()
runApp()
library(shiny)
library(shiny.tailwind)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('Components/trial.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
force(inputs)
match(inputs,df_names$internal)
runApp()
setNames(inputs,df_names$ui[inds])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
variable_names<-df_names%>%filter(`prepost`== pp,`group_1` == g1, `group_2` == g2, `group_3+`== g3)
runApp()
runApp()
runApp()
runApp()
runApp()
library(charpente)
html_2_R('<ul class="max-w-md space-y-1 text-gray-500 list-disc list-inside dark:text-gray-400">
<li>
At least 10 characters (and up to 100 characters)
</li>
<li>
At least one lowercase character
</li>
<li>
Inclusion of at least one special character, e.g., ! @ # ?
</li>
</ul>')
tags$li("At least 10 characters (and up to 100 characters)")
lapply(list(1,2,3), tags$li())
lapply(list(1,2,3), tags$li)
runApp()
runApp()
runApp()
out_list<-div(class="bg-white px-5 py-4 rounded-lg absolute bottom-{10vh}",
tags$h2(class="mb-2 text-lg font-semibold text-gray-900 dark:text-white","Available Conversions"),
tags$ul(
class = "max-w-md space-y-1 text-gray-500 list-disc list-inside dark:text-gray-400",
lapply(itmList, tags$li))
)
runApp()
out_list<-div(class="bg-white px-5 py-4 rounded-lg absolute", style="bottom:5%;",
tags$h2(class="mb-2 text-lg font-semibold text-gray-900 dark:text-white","Available Conversions"),
tags$ul(
class = "max-w-md space-y-1 text-gray-500 list-disc list-inside dark:text-gray-400",
lapply(itmList, tags$li))
)
runApp()
out_list<-div(class="bg-white px-5 py-4 rounded-lg absolute", style="bottom:5%; transform:translatex(-50%)",
tags$h2(class="mb-2 text-lg font-semibold text-gray-900 dark:text-white","Available Conversions"),
tags$ul(
class = "max-w-md space-y-1 text-gray-500 list-disc list-inside dark:text-gray-400",
lapply(itmList, tags$li))
)
runApp()
runApp()
available_funcs
available_funcs%>%select(current,original)
runApp()
runApp()
runApp()
install.packages("shiny.router")
library(shiny.router)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data.frame(c("11","12"))
data.frame(list("11","12"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df2<-df2[match(df$Study_ID,df2$Study_ID),]
runApp()
#single group
mean_ci<-mean_studies%>%filter(!is.na(ulci), !is.na(llci),  !is.na(N1))%>%mutate(SD=sqrt(N1) * (ulci-llci) / ifelse(N1>=100, 3.92, 2*tinv(0.05,N-1) ) )
runApp()
runApp()
runApp()
library(gt)
library(tidyverse)
library(readxl)
library(openxlsx)
Results <- read_excel("Results.xlsx", col_types = c("text",
"text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric"))
#setwd("F:/Research/stats/New stats")
setwd("F:/Research/rs1799971 & addiction/Final_version/Stats")
Results <- read_excel("Results.xlsx", col_types = c("text",
"text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric"))
View(Results)
Results <- Results%>%mutate(OR=exp(TE),sub1OR=exp(sub1TE),sub2OR=exp(sub2TE))
Alcohol<-Results%>%filter(str_detect(Model,"Alcohol"))
Nicotine<-Results%>%filter(str_detect(Model,"Nicotine"))
Cocaine<-Results%>%filter(str_detect(Model,"Cocaine"))
Opioid<-Results%>%filter(str_detect(Model,"Opioid"))
GSD<-Results%>%filter(str_detect(Model,"GSD"))
Substances<-list(Alcohol,Opioid,GSD,Nicotine,Cocaine)
subgo<-c("sub1","sub2")
count<-1
for (sub in Substances){
if(!is.na(sub$subs[1])){
subgs<-unlist(str_split(sub$subs[1],"/")) # Extract subgroup order
subg<-list()
i<-1
df<-sub
for (s in subgo){
df<-df%>%rename_with(~gsub(s, paste(subgs[i],"_",sep = ""), .x, fixed = TRUE),contains(s))
i<-i+1
}
Substances[[count]]<-df
}
count<-count+1
}
#Create Table Layout
count<-1
for (sub in Substances){
#Separate Cols
df<-sub%>%select(!contains("subs"))
Total<-df%>%select(!(contains("_")|contains("...1")|contains("sub")))
Asian<-df%>%select((("Model")|contains("Asian")|contains("sub2"))& !contains("Caucasian"))
Caucasian<-df%>%select(("Model")|contains("Caucasian")|contains("sub2"))
#Rename Cols
Asian<-Asian%>%rename_with(~colnames(Total),all_of(colnames(Asian)))%>%mutate(Ethnicity="Asian")%>%relocate(Ethnicity,.after=Model)
Caucasian<-Caucasian%>%rename_with(~colnames(Total),all_of(colnames(Caucasian)))%>%mutate(Ethnicity="Caucasian")%>%relocate(Ethnicity,.after=Model)
Total<-Total%>%mutate(Ethnicity="Total")%>%relocate(Ethnicity,.after=Model)
df<-rbind(Asian,Caucasian,Total)%>%arrange(Model)
df<-df%>%select(!contains("OR"))
#Transform I2
df$I2<-lapply(df$I2,function(x) round(x*100,2))
#Transform TE,CI
df[c("TE","CIl","CIu")]<-lapply(df[c("TE","CIl","CIu")],function(x) round(exp(x),2))
#Round
df<-cbind(select(df,!where(is.numeric)),lapply(df[,unlist(lapply(df, is.numeric))],function(x) round(x,2)))
df[is.na(df)]<-''
Substances[[count]]<-df
count<-count+1
}
traceback()
#Separate Cols
df<-sub%>%select(!contains("subs"))
Total<-df%>%select(!(contains("_")|contains("...1")|contains("sub")))
Asian<-df%>%select((("Model")|contains("Asian")|contains("sub2"))& !contains("Caucasian"))
Caucasian<-df%>%select(("Model")|contains("Caucasian")|contains("sub2"))
#Rename Cols
Asian<-Asian%>%rename_with(~colnames(Total),all_of(colnames(Asian)))%>%mutate(Ethnicity="Asian")%>%relocate(Ethnicity,.after=Model)
#Rename Cols
Asian<-Asian%>%rename_with(~colnames(Total),all_of(colnames(Asian)))#%>%mutate(Ethnicity="Asian")%>%relocate(Ethnicity,.after=Model)
View(Asian)
View(Total)
#Separate Cols
df<-sub%>%select(!contains("subs"))
Total<-df%>%select(!(contains("_")|contains("...1")|contains("sub")))%.%select(!mod)
Asian<-df%>%select((("Model")|contains("Asian")|contains("sub2"))& !contains("Caucasian"))
Caucasian<-df%>%select(("Model")|contains("Caucasian")|contains("sub2"))
#Separate Cols
df<-sub%>%select(!contains("subs"))
Total<-df%>%select(!(contains("_")|contains("...1")|contains("sub")))%.%select(!mod)
Total<-df%>%select(!(contains("_")|contains("...1")|contains("sub")))%>%select(!mod)
Asian<-df%>%select((("Model")|contains("Asian")|contains("sub2"))& !contains("Caucasian"))
Caucasian<-df%>%select(("Model")|contains("Caucasian")|contains("sub2"))
#Rename Cols
Asian<-Asian%>%rename_with(~colnames(Total),all_of(colnames(Asian)))#%>%mutate(Ethnicity="Asian")%>%relocate(Ethnicity,.after=Model)
#Rename Cols
Asian<-Asian%>%rename_with(~colnames(Total),all_of(colnames(Asian)))%>%mutate(Ethnicity="Asian")%>%relocate(Ethnicity,.after=Model)
Caucasian<-Caucasian%>%rename_with(~colnames(Total),all_of(colnames(Caucasian)))%>%mutate(Ethnicity="Caucasian")%>%relocate(Ethnicity,.after=Model)
Total<-Total%>%mutate(Ethnicity="Total")%>%relocate(Ethnicity,.after=Model)
df<-rbind(Asian,Caucasian,Total)%>%arrange(Model)
df<-df%>%select(!contains("OR"))
#Transform I2
df$I2<-lapply(df$I2,function(x) round(x*100,2))
#Transform TE,CI
df[c("TE","CIl","CIu")]<-lapply(df[c("TE","CIl","CIu")],function(x) round(exp(x),2))
#Round
df<-cbind(select(df,!where(is.numeric)),lapply(df[,unlist(lapply(df, is.numeric))],function(x) round(x,2)))
df[is.na(df)]<-''
Substances[[count]]<-df
count<-1
for (sub in Substances){
#Separate Cols
df<-sub%>%select(!contains("subs"))
Total<-df%>%select(!(contains("_")|contains("...1")|contains("sub")))%>%select(!mod)
Asian<-df%>%select((("Model")|contains("Asian")|contains("sub2"))& !contains("Caucasian"))
Caucasian<-df%>%select(("Model")|contains("Caucasian")|contains("sub2"))
#Rename Cols
Asian<-Asian%>%rename_with(~colnames(Total),all_of(colnames(Asian)))%>%mutate(Ethnicity="Asian")%>%relocate(Ethnicity,.after=Model)
Caucasian<-Caucasian%>%rename_with(~colnames(Total),all_of(colnames(Caucasian)))%>%mutate(Ethnicity="Caucasian")%>%relocate(Ethnicity,.after=Model)
Total<-Total%>%mutate(Ethnicity="Total")%>%relocate(Ethnicity,.after=Model)
df<-rbind(Asian,Caucasian,Total)%>%arrange(Model)
df<-df%>%select(!contains("OR"))
#Transform I2
df$I2<-lapply(df$I2,function(x) round(x*100,2))
#Transform TE,CI
df[c("TE","CIl","CIu")]<-lapply(df[c("TE","CIl","CIu")],function(x) round(exp(x),2))
#Round
df<-cbind(select(df,!where(is.numeric)),lapply(df[,unlist(lapply(df, is.numeric))],function(x) round(x,2)))
df[is.na(df)]<-''
Substances[[count]]<-df
count<-count+1
}
library(gt)
library(tidyverse)
library(readxl)
library(openxlsx)
#setwd("F:/Research/stats/New stats")
setwd("F:/Research/rs1799971 & addiction/Final_version/Stats")
Results <- read_excel("Results.xlsx", col_types = c("text",
"text", "text", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric", "numeric",
"numeric"))
#Transform TE
Results <- Results%>%mutate(OR=exp(TE),sub1OR=exp(sub1TE),sub2OR=exp(sub2TE))
#Split into substances
Alcohol<-Results%>%filter(str_detect(Model,"Alcohol"))
Nicotine<-Results%>%filter(str_detect(Model,"Nicotine"))
Cocaine<-Results%>%filter(str_detect(Model,"Cocaine"))
Opioid<-Results%>%filter(str_detect(Model,"Opioid"))
GSD<-Results%>%filter(str_detect(Model,"GSD"))
#Rename subgroups
Substances<-list(Alcohol,Opioid,GSD,Nicotine,Cocaine)
subgo<-c("sub1","sub2")
count<-1
for (sub in Substances){
if(!is.na(sub$subs[1])){
subgs<-unlist(str_split(sub$subs[1],"/")) # Extract subgroup order
subg<-list()
i<-1
df<-sub
for (s in subgo){
df<-df%>%rename_with(~gsub(s, paste(subgs[i],"_",sep = ""), .x, fixed = TRUE),contains(s))
i<-i+1
}
Substances[[count]]<-df
}
count<-count+1
}
#Create Table Layout
count<-1
for (sub in Substances){
#Separate Cols
df<-sub%>%select(!contains("subs"))
Total<-df%>%select(!(contains("_")|contains("...1")|contains("sub")))%>%select(!mod)
Asian<-df%>%select((("Model")|contains("Asian")|contains("sub2"))& !contains("Caucasian"))
Caucasian<-df%>%select(("Model")|contains("Caucasian")|contains("sub2"))
#Rename Cols
Asian<-Asian%>%rename_with(~colnames(Total),all_of(colnames(Asian)))%>%mutate(Ethnicity="Asian")%>%relocate(Ethnicity,.after=Model)
Caucasian<-Caucasian%>%rename_with(~colnames(Total),all_of(colnames(Caucasian)))%>%mutate(Ethnicity="Caucasian")%>%relocate(Ethnicity,.after=Model)
Total<-Total%>%mutate(Ethnicity="Total")%>%relocate(Ethnicity,.after=Model)
df<-rbind(Asian,Caucasian,Total)%>%arrange(Model)
df<-df%>%select(!contains("OR"))
#Transform I2
df$I2<-lapply(df$I2,function(x) round(x*100,2))
#Transform TE,CI
df[c("TE","CIl","CIu")]<-lapply(df[c("TE","CIl","CIu")],function(x) round(exp(x),2))
#Round
df<-cbind(select(df,!where(is.numeric)),lapply(df[,unlist(lapply(df, is.numeric))],function(x) round(x,2)))
df[is.na(df)]<-''
Substances[[count]]<-df
count<-count+1
}
Substances[[1]]
Substances[[1]]%>%gt()
shiny::runApp('MetaUI')
runApp('MetaUI')
install.packages("psych")
runApp('MetaUI')
View(metaUI__df)
View(df)
runApp('MetaUI')
meta::forest.meta(mg,prediction = TRUE, subgroup.name ="",colgap.forest.left = grid::unit(2,"cm"),colgap.left = grid::unit(0.5,"cm"),subgroup = Ethnicity,
col.by ="#CA2B30",Col.diamond = "#083D77", col.diamond.lines = "#251101",col.square = "#083D77",spacing = 1.2,
leftlabs = c("Study","Event","Total","Event","Total","Quality"),leftcols =c("studlab",  "Cas_event", "Cas_nevent", "Con_event", "Con_nevent", "metaUI__filter_Quality"),label.e = "Case",hetstats="random",print.Q = TRUE,print.pval.Q = TRUE)
#rve <- robumeta::robu(metaUI__effect_size ~ 1, data = df, studynum = metaUI__study_id, var.eff.size = metaUI__variance, small = FALSE)
mg<-meta::metabin(Cas_event,Cas_nevent,Con_event,Con_nevent,metaUI__study_id,df,method = "Inverse",sm="OR",random = TRUE,fixed = TRUE,method.tau = "REML",allstudies = TRUE,incr = "TACC", backtransf = TRUE)
runApp('MetaUI')
meta::forest.meta(mg,prediction = TRUE, subgroup.name ="",colgap.forest.left = grid::unit(2,"cm"),colgap.left = grid::unit(0.5,"cm"),subgroup = Ethnicity,
col.by ="#CA2B30",Col.diamond = "#083D77", col.diamond.lines = "#251101",col.square = "#083D77",spacing = 1.2,
leftlabs = c("Study","Event","Total","Event","Total","Quality"),leftcols =c("studlab",  "Cas_event", "Cas_nevent", "Con_event", "Con_nevent", "metaUI__filter_Quality"),label.e = "Case",hetstats="random",print.Q = TRUE,print.pval.Q = TRUE)
runApp('MetaUI')
View(df)
View(df)
View(df)
meta::metabin(Cas_event,Cas_nevent,Con_event,Con_nevent,metaUI__study_id,df,method = "Inverse",sm="OR",random = TRUE,fixed = TRUE,method.tau = "REML",allstudies = TRUE,subgroup = metaUI_filter_Ethnicity,incr = "TACC", backtransf = TRUE)
colnames(df)
meta::metabin(Cas_event,Cas_nevent,Con_event,Con_nevent,metaUI__study_id,df,method = "Inverse",sm="OR",random = TRUE,fixed = TRUE,method.tau = "REML",allstudies = TRUE,subgroup = metaUI__filter_Ethnicity,incr = "TACC", backtransf = TRUE)
runApp()
runApp('MetaUI')
runApp('MetaUI')
runApp('MetaUI')
meta::metabin(Cas_event,Cas_nevent,Con_event,Con_nevent,metaUI__study_id,df,method = "Inverse",sm="OR",random = TRUE,fixed = TRUE,method.tau = "REML",allstudies = TRUE,subgroup = metaUI__filter_Ethnicity,incr = "TACC", backtransf = TRUE)
meta::forest.meta(mg,prediction = TRUE, subgroup.name ="",colgap.forest.left = grid::unit(2,"cm"),colgap.left = grid::unit(0.5,"cm"),subgroup = metaUI__filter_Ethnicity ,
col.by ="#CA2B30",Col.diamond = "#083D77", col.diamond.lines = "#251101",col.square = "#083D77",spacing = 1.2,
leftlabs = c("Study","Event","Total","Event","Total","Quality"),leftcols =c("studlab",  "Cas_event", "Cas_nevent", "Con_event", "Con_nevent", "metaUI__filter_Quality"),label.e = "Case",hetstats="random",print.Q = TRUE,print.pval.Q = TRUE)
runApp('MetaUI')
runApp('MetaUI')
runApp('MetaUI')
runApp('MetaUI')
runApp('MetaUI')
runApp('MetaUI')
runApp('MetaUI')
runApp('MetaUI')
runApp('MetaUI')
shiny::runApp('F:/Research/rs1799971 & addiction/Final_version/Stats')
traceback()
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
traceback()
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
output$foreststudies
output
output$moderation_table
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
shiny::runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
shiny::runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
df_filtered_n()
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
df
df()
df_filtered()
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
isolate(number_of_studies$n)*20+355
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
835-555
355+280
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
plotly::ggplotly(violinplot, tooltip = "text")
plotly::ggplotly(violinplot, tooltip = "text", width = 640, height = 480)
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
zcurve::zcurve(df_first$z, bootstrap = FALSE)
zcurve::zcurve(as.numeric(df_first$z), bootstrap = FALSE)
df_first$z
View(df_first)
df_first$z
list(df_first$z)
df_first %>%select(z)
as.numeric(df_first %>%select(z))
tmp<-df_first %>%select(z)
tmp
unlist(tmp)
as.numeric(unlist(tmp))
zcurve::zcurve(as.numeric(unlist(tmp)))
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
zcurve::zcurve(z_est, method = "EM", bootstrap = FALSE)
zcurve::zcurve(z_est, method = "EM")
zcurve::zcurve(z_est)
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
install.packages('rsconnect')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
runApp('F:/Research/rs1799971 & addiction/Final_version/Stats/MetaUI')
shiny::runApp()
